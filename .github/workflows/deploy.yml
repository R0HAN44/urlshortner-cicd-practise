name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies (frontend)
        working-directory: ./frontend
        run: npm install

      - name: Run tests (frontend)
        working-directory: ./frontend
        run: npm run lint

      - name: Install dependencies (backend)
        working-directory: ./backend
        run: npm install

      - name: Run tests (backend)
        working-directory: ./backend
        run: npm run test

    deploy:
    name: Deploy to EC2
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        
      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@54.88.159.194 "cd urlshortner-cicd-practise && \
          git pull && \
          echo 'MONGODB_URI=${{ secrets.MONGODB_URI }}' > .env && \
          echo 'BASE_URL=${{ secrets.BASE_URL }}' >> .env && \
          docker-compose down && \
          docker-compose up -d --build"
